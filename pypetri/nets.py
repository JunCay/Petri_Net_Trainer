from .petri_nets_pro import *
from .colored_petri_nets import *

class TestNet(PetriNet):
    def __init__(self, name):
        super().__init__(name)
        p1 = Place('p1', 'Lot release')
        p2 = Place('p2', 'Route choise')
        p3 = Place('p3', 'Buffer 1')
        p4 = Place('p4', 'Buffer 2')
        p5 = Place('p5', 'Buffer 3')
        p6 = Place('p6', 'Out')
        p7 = Place('p7', 'Failout')
        p8 = Place('p8', 'end')

        t1 = Transition('t1', note='Initial set')
        t2 = Transition('t2', note='center 1', type='timed', time=20, reward=0)
        t3 = Transition('t3', note='center 2', type='timed', time=30, reward=0)
        t4 = Transition('t4', note='center 3', type='timed', time=20, reward=0)
        t5 = Transition('t5', note='elementry 1', type='timed', time=20, reward=0)
        t6 = Transition('t6', note='elementry 2', type='timed', time=5, reward=0)
        t7 = Transition('t7', note='elementry 3', type='timed', time=20, reward=0)
        t8 = Transition('t8', note='set up', type='timed', time=20, reward=0)
        t9 = Transition('t9', note='complete', type='auto', reward=200)
        t10 = Transition('t10', note='rework', type='auto', reward=-10)
        
        self.add(p1)
        self.add(p2)
        self.add(p3)
        self.add(p4)
        self.add(p5)
        self.add(p6)
        self.add(p7)
        self.add(p8)
        self.add(t1)
        self.add(t2)
        self.add(t3)
        self.add(t4)
        self.add(t5)
        self.add(t6)
        self.add(t7)
        self.add(t8)
        self.add(t9)
        self.add(t10)
        self.link(p1, t1)
        self.link(t1, p2)
        self.link(p2, t2)
        self.link(p2, t3)
        self.link(p2, t4)
        self.link(t2, p3)
        self.link(t3, p4)
        self.link(t4, p5)
        self.link(p3, t5)
        self.link(p4, t6)
        self.link(p5, t7)
        self.link(t5, p6)
        self.link(t6, p6)
        self.link(t7, p7)
        self.link(p6, t8)
        self.link(p6, t9)
        self.link(p7, t10)
        self.link(t8, p2)
        self.link(t10, p2)
        self.link(t9, p8)
        
        init_dict = dict()
        for key in self.places.keys():
            init_dict[key] = {'default': 0}
        init_dict['p1'] = {'default': 30}
        self.define_initial(initial_dict=init_dict)
        self.set_invalid_fire_penalty(-2)
        self.reset()
        self.initialize_net()

        
class TestNet_HarderTime(PetriNet):
    def __init__(self, name):
        super().__init__(name)
        p1 = Place('p1', 'Lot release')
        p2 = Place('p2', 'Route choise')
        p3 = Place('p3', 'Buffer 1')
        p4 = Place('p4', 'Buffer 2')
        p5 = Place('p5', 'Buffer 3')
        p6 = Place('p6', 'Out')
        p7 = Place('p7', 'Failout')
        p8 = Place('p8', 'end')

        t1 = Transition('t1', note='Initial set')
        t2 = Transition('t2', note='center 1', type='timed', time=20, reward=0)
        t3 = Transition('t3', note='center 2', type='timed', time=30, reward=0)
        t4 = Transition('t4', note='center 3', type='timed', time=20, reward=0)
        t5 = Transition('t5', note='elementry 1', type='timed', time=20, reward=0)
        t6 = Transition('t6', note='elementry 2', type='timed', time=5, reward=0)
        t7 = Transition('t7', note='elementry 3', type='timed', time=20, reward=0)
        t8 = Transition('t8', note='set up', type='timed', time=20, reward=0)
        t9 = Transition('t9', note='complete', type='auto', reward=200)
        t10 = Transition('t10', note='rework', type='auto', reward=-10)
        
        self.add(p1)
        self.add(p2)
        self.add(p3)
        self.add(p4)
        self.add(p5)
        self.add(p6)
        self.add(p7)
        self.add(p8)
        self.add(t1)
        self.add(t2)
        self.add(t3)
        self.add(t4)
        self.add(t5)
        self.add(t6)
        self.add(t7)
        self.add(t8)
        self.add(t9)
        self.add(t10)
        self.link(p1, t1)
        self.link(t1, p2)
        self.link(p2, t2)
        self.link(p2, t3)
        self.link(p2, t4)
        self.link(t2, p3)
        self.link(t3, p4)
        self.link(t4, p5)
        self.link(p3, t5)
        self.link(p4, t6)
        self.link(p5, t7)
        self.link(t5, p6)
        self.link(t6, p6)
        self.link(t7, p7)
        self.link(p6, t8)
        self.link(p6, t9)
        self.link(p7, t10)
        self.link(t8, p2)
        self.link(t10, p2)
        self.link(t9, p8)
        
        self.define_initial({'p1':{'default': 10}})
        self.set_invalid_fire_penalty(-2)
        self.reset()
        self.initialize_net()
   
        
class TestNet_Colored(ColoredPetriNet):
    def __init__(self, name):
        super().__init__(name)
        p1 = Place('p1', 'Lot release')
        p2 = Place('p2', 'Route choise')
        p3 = Place('p3', 'Buffer 1')
        p4 = Place('p4', 'Buffer 2')
        p5 = Place('p5', 'Buffer 3')
        p6 = Place('p6', 'Out')
        p7 = Place('p7', 'Failout')
        p8 = Place('p8', 'end')

        t1 = Transition('t1', note='Initial set')
        t2 = Transition('t2', note='center 1', type='timed', time=20, mu=20, reward=0, cv=0.5)
        t3 = Transition('t3', note='center 2', type='stochastic', dist_type='gaussian', mu=30, sigma=3, reward=0)
        t4 = Transition('t4', note='center 3', type='timed', time=20, mu=20, reward=0)
        t5 = Transition('t5', note='elementry 1', type='timed', time=20, mu=20, reward=0)
        t6 = Transition('t6', note='elementry 2', type='timed', time=5, mu=20, reward=0)
        t7 = Transition('t7', note='elementry 3', type='timed', time=20, mu=20, reward=0)
        t8 = Transition('t8', note='set up', type='timed', time=20, mu=20, reward=0)
        t9 = Transition('t9', note='complete', type='auto', reward=200)
        t10 = Transition('t10', note='rework', type='auto', reward=-10)
        
        self.add(p1)
        self.add(p2)
        self.add(p3)
        self.add(p4)
        self.add(p5)
        self.add(p6)
        self.add(p7)
        self.add(p8)
        self.add(t1)
        self.add(t2)
        self.add(t3)
        self.add(t4)
        self.add(t5)
        self.add(t6)
        self.add(t7)
        self.add(t8)
        self.add(t9)
        self.add(t10)
        self.link(p1, t1)
        self.link(t1, p2)
        self.link(p2, t2)
        self.link(p2, t3)
        self.link(p2, t4)
        self.link(t2, p3)
        self.link(t3, p4)
        self.link(t4, p5)
        self.link(p3, t5)
        self.link(p4, t6)
        self.link(p5, t7)
        self.link(t5, p6)
        self.link(t6, p6)
        self.link(t7, p7)
        self.link(p6, t8)
        self.link(p6, t9)
        self.link(p7, t10)
        self.link(t8, p2)
        self.link(t10, p2)
        self.link(t9, p8)
        
        init_dict = dict()
        for i in range(len(self.places)):
            init_dict['p'+str(i+1)] = {'default': 0, 'default_error':0}
        init_dict['p1']['default'] = 30
        self.define_initial(initial_dict=init_dict)
        self.set_invalid_fire_penalty(-2)
        self.reset()
        self.initialize_net()
        

class S3PR_Net(ColoredPetriNet):
    def __init__(self, name):
        super().__init__(name)
        p1 = Place('p1', capacity=10)
        p2 = Place('p2', capacity=10)
        p3 = Place('p3', capacity=10)
        p4 = Place('p4', capacity=10)
        p5 = Place('p5', capacity=10)
        p6 = Place('p6', capacity=10)
        p7 = Place('p7')
        p8 = Place('p8')
        p9 = Place('p9')
        p10 = Place('p10')
        p11 = Place('p11')
        p12 = Place('p12')
        p13 = Place('p13')
        p14 = Place('p14')
        p15 = Place('p15')
        p16 = Place('p16')
        p17 = Place('p17')
        p18 = Place('p18')
        p19 = Place('p19')
        p20 = Place('p20')
        p21 = Place('p21')
        p22 = Place('p22')
        p23 = Place('p23', place_type='resource')
        p24 = Place('p24', place_type='resource', capacity=2)
        p25 = Place('p25', place_type='resource', capacity=2)
        p26 = Place('p26', place_type='resource')
        p27 = Place('p27', place_type='resource', capacity=2)
        p28 = Place('p28', place_type='resource', capacity=2)
        p29 = Place('p29', place_type='resource')
        
        t0 = Transition('t0', type='timed', time=1, mu=1)
        t1 = Transition('t1', type='timed', time=1, mu=1)
        t2 = Transition('t2', type='timed', time=1, mu=1)
        t3 = Transition('t3', type='timed', time=1, mu=1, reward=100)
        t4 = Transition('t4', type='timed', time=1, mu=1)
        t5 = Transition('t5', type='timed', time=1, mu=1)
        t6 = Transition('t6', type='timed', time=1, mu=1)
        t7 = Transition('t7', type='timed', time=1, mu=1)
        t8 = Transition('t8', type='timed', time=1, mu=1)
        t9 = Transition('t9', type='timed', time=1, mu=1)
        t10 = Transition('t10', type='timed', time=1, mu=1)
        t11 = Transition('t11', type='timed', time=1, mu=1)
        t12 = Transition('t12', type='timed', time=1, mu=1)
        t13 = Transition('t13', type='timed', time=1, mu=1, reward=100)
        t14 = Transition('t14', type='timed', time=1, mu=1)
        t15 = Transition('t15', type='timed', time=1, mu=1)
        t16 = Transition('t16', type='timed', time=1, mu=1)
        t17 = Transition('t17', type='timed', time=1, mu=1)
        t18 = Transition('t18', type='timed', time=1, mu=1)
        t19 = Transition('t19', type='timed', time=1, mu=1, reward=100)
        
        self.add(p1)
        self.add(p2)
        self.add(p3)
        self.add(p4)
        self.add(p5)
        self.add(p6)
        self.add(p7)
        self.add(p8)
        self.add(p9)
        self.add(p10)
        self.add(p11)
        self.add(p12)
        self.add(p13)
        self.add(p14)
        self.add(p15)
        self.add(p16)
        self.add(p17)
        self.add(p18)
        self.add(p19)
        self.add(p20)
        self.add(p21)
        self.add(p22)
        self.add(p23)
        self.add(p24)
        self.add(p25)
        self.add(p26)
        self.add(p27)
        self.add(p28)
        self.add(p29)
        
        self.add(t0)
        self.add(t1)
        self.add(t2)
        self.add(t3)
        self.add(t4)
        self.add(t5)
        self.add(t6)
        self.add(t7)
        self.add(t8)
        self.add(t9)
        self.add(t10)
        self.add(t11)
        self.add(t12)
        self.add(t13)
        self.add(t14)
        self.add(t15)
        self.add(t16)
        self.add(t17)
        self.add(t18)
        self.add(t19)
        
        self.link(p1, t0)
        self.link(p23, t0)
        self.link(t0, p7)
        self.link(p7, t1)
        self.link(p25, t1)
        self.link(t1, p8)
        self.link(t1, p23)
        self.link(p8, t2)
        self.link(p23, t2)
        self.link(t2, p9)
        self.link(t2, p25)
        self.link(p9, t3)
        self.link(t3, p23)
        self.link(t3, p4)
        self.link(p2, t4)
        self.link(p29, t4)
        self.link(t4, p10)
        self.link(p10, t5)
        self.link(p24, t5)
        self.link(t5, p11)
        self.link(t5, p29)
        self.link(p10, t6)
        self.link(p28, t6)
        self.link(t6, p12)
        self.link(t6, p29)
        self.link(p11, t7)
        self.link(p23, t7)
        self.link(t7, p13)
        self.link(t7, p24)
        self.link(p12, t8)
        self.link(p23, t8)
        self.link(t8, p14)
        self.link(t8, p28)
        self.link(p13, t9)
        self.link(p25, t9)
        self.link(t9, p23)
        self.link(t9, p15)
        self.link(p14, t10)
        self.link(p27, t10)
        self.link(t10, p23)
        self.link(t10, p16)
        self.link(p15, t11)
        self.link(p26, t11)
        self.link(t11, p25)
        self.link(t11, p17)
        self.link(p16, t12)
        self.link(p26, t12)
        self.link(t12, p27)
        self.link(t12, p17)
        self.link(p17, t13)
        self.link(t13, p5)
        self.link(t13, p26)
        self.link(p3, t14)
        self.link(p26, t14)
        self.link(t14, p18)
        self.link(p18, t15)
        self.link(p27, t15)
        self.link(t15, p26)
        self.link(t15, p19)
        self.link(p19, t16)
        self.link(p23, t16)
        self.link(t16, p27)
        self.link(t16, p20)
        self.link(p20, t17)
        self.link(p28, t17)
        self.link(t17, p23)
        self.link(t17, p21)
        self.link(p21, t18)
        self.link(p29, t18)
        self.link(t18, p22)
        self.link(t18, p28)
        self.link(p22, t19)
        self.link(t19, p29)
        self.link(t19, p6)
        
        init_dict = dict()
        for i in range(len(self.places)):
            init_dict['p'+str(i+1)] = {'default': 0}
        init_dict['p1']['default'] = 10
        init_dict['p2']['default'] = 10
        init_dict['p3']['default'] = 10
        
        init_dict['p23']['default'] = 1
        init_dict['p24']['default'] = 2
        init_dict['p25']['default'] = 2
        init_dict['p26']['default'] = 1
        init_dict['p27']['default'] = 2
        init_dict['p28']['default'] = 2
        init_dict['p29']['default'] = 1
        
        
        self.define_initial(initial_dict=init_dict)
        self.set_invalid_fire_penalty(-1)
        self.reset()
        self.initialize_net()
        
    def invalid_fire_penalty(self, transition_name):
        return self.invalid_fire_penalty0 * (1-np.exp(-self.transitions[transition_name].missfire_num))
        
        
class Feature_S3PR_Net(FeaturePetriNet):
    def __init__(self, name, features):
        super().__init__(name, features=features)
        p1 = Place('p1', capacity=10)
        p2 = Place('p2', capacity=10)
        p3 = Place('p3', capacity=10)
        p4 = Place('p4', capacity=10)
        p5 = Place('p5', capacity=10)
        p6 = Place('p6', capacity=10)
        p7 = Place('p7')
        p8 = Place('p8')
        p9 = Place('p9')
        p10 = Place('p10')
        p11 = Place('p11')
        p12 = Place('p12')
        p13 = Place('p13')
        p14 = Place('p14')
        p15 = Place('p15')
        p16 = Place('p16')
        p17 = Place('p17')
        p18 = Place('p18')
        p19 = Place('p19')
        p20 = Place('p20')
        p21 = Place('p21')
        p22 = Place('p22')
        p23 = Place('p23', place_type='resource')
        p24 = Place('p24', place_type='resource', capacity=2)
        p25 = Place('p25', place_type='resource', capacity=2)
        p26 = Place('p26', place_type='resource')
        p27 = Place('p27', place_type='resource', capacity=2)
        p28 = Place('p28', place_type='resource', capacity=2)
        p29 = Place('p29', place_type='resource')
        
        t0 = Transition('t0', type='timed', time=1, mu=1)
        t1 = Transition('t1', type='timed', time=1, mu=1)
        t2 = Transition('t2', type='timed', time=1, mu=1)
        t3 = Transition('t3', type='timed', time=1, mu=1, reward=100)
        t4 = Transition('t4', type='timed', time=1, mu=1)
        t5 = Transition('t5', type='timed', time=1, mu=1)
        t6 = Transition('t6', type='timed', time=1, mu=1)
        t7 = Transition('t7', type='timed', time=1, mu=1)
        t8 = Transition('t8', type='timed', time=1, mu=1)
        t9 = Transition('t9', type='timed', time=1, mu=1)
        t10 = Transition('t10', type='timed', time=1, mu=1)
        t11 = Transition('t11', type='timed', time=1, mu=1)
        t12 = Transition('t12', type='timed', time=1, mu=1)
        t13 = Transition('t13', type='timed', time=1, mu=1, reward=100)
        t14 = Transition('t14', type='timed', time=1, mu=1)
        t15 = Transition('t15', type='timed', time=1, mu=1)
        t16 = Transition('t16', type='timed', time=1, mu=1)
        t17 = Transition('t17', type='timed', time=1, mu=1)
        t18 = Transition('t18', type='timed', time=1, mu=1)
        t19 = Transition('t19', type='timed', time=1, mu=1, reward=100)
        
        self.add(p1)
        self.add(p2)
        self.add(p3)
        self.add(p4)
        self.add(p5)
        self.add(p6)
        self.add(p7)
        self.add(p8)
        self.add(p9)
        self.add(p10)
        self.add(p11)
        self.add(p12)
        self.add(p13)
        self.add(p14)
        self.add(p15)
        self.add(p16)
        self.add(p17)
        self.add(p18)
        self.add(p19)
        self.add(p20)
        self.add(p21)
        self.add(p22)
        self.add(p23)
        self.add(p24)
        self.add(p25)
        self.add(p26)
        self.add(p27)
        self.add(p28)
        self.add(p29)
        
        self.add(t0)
        self.add(t1)
        self.add(t2)
        self.add(t3)
        self.add(t4)
        self.add(t5)
        self.add(t6)
        self.add(t7)
        self.add(t8)
        self.add(t9)
        self.add(t10)
        self.add(t11)
        self.add(t12)
        self.add(t13)
        self.add(t14)
        self.add(t15)
        self.add(t16)
        self.add(t17)
        self.add(t18)
        self.add(t19)
        
        self.link(p1, t0)
        self.link(p23, t0)
        self.link(t0, p7)
        self.link(p7, t1)
        self.link(p25, t1)
        self.link(t1, p8)
        self.link(t1, p23)
        self.link(p8, t2)
        self.link(p23, t2)
        self.link(t2, p9)
        self.link(t2, p25)
        self.link(p9, t3)
        self.link(t3, p23)
        self.link(t3, p4)
        self.link(p2, t4)
        self.link(p29, t4)
        self.link(t4, p10)
        self.link(p10, t5)
        self.link(p24, t5)
        self.link(t5, p11)
        self.link(t5, p29)
        self.link(p10, t6)
        self.link(p28, t6)
        self.link(t6, p12)
        self.link(t6, p29)
        self.link(p11, t7)
        self.link(p23, t7)
        self.link(t7, p13)
        self.link(t7, p24)
        self.link(p12, t8)
        self.link(p23, t8)
        self.link(t8, p14)
        self.link(t8, p28)
        self.link(p13, t9)
        self.link(p25, t9)
        self.link(t9, p23)
        self.link(t9, p15)
        self.link(p14, t10)
        self.link(p27, t10)
        self.link(t10, p23)
        self.link(t10, p16)
        self.link(p15, t11)
        self.link(p26, t11)
        self.link(t11, p25)
        self.link(t11, p17)
        self.link(p16, t12)
        self.link(p26, t12)
        self.link(t12, p27)
        self.link(t12, p17)
        self.link(p17, t13)
        self.link(t13, p5)
        self.link(t13, p26)
        self.link(p3, t14)
        self.link(p26, t14)
        self.link(t14, p18)
        self.link(p18, t15)
        self.link(p27, t15)
        self.link(t15, p26)
        self.link(t15, p19)
        self.link(p19, t16)
        self.link(p23, t16)
        self.link(t16, p27)
        self.link(t16, p20)
        self.link(p20, t17)
        self.link(p28, t17)
        self.link(t17, p23)
        self.link(t17, p21)
        self.link(p21, t18)
        self.link(p29, t18)
        self.link(t18, p22)
        self.link(t18, p28)
        self.link(p22, t19)
        self.link(t19, p29)
        self.link(t19, p6)
        
        init_dict = dict()
        for i in range(len(self.places)):
            init_dict['p'+str(i+1)] = {'default': 0}
        init_dict['p1']['default'] = 10
        init_dict['p2']['default'] = 10
        init_dict['p3']['default'] = 10
        
        init_dict['p23']['default'] = 1
        init_dict['p24']['default'] = 2
        init_dict['p25']['default'] = 2
        init_dict['p26']['default'] = 1
        init_dict['p27']['default'] = 2
        init_dict['p28']['default'] = 2
        init_dict['p29']['default'] = 1
        
        
        self.define_initial(initial_dict=init_dict)
        self.set_invalid_fire_penalty(-1)
        self.reset()
        self.initialize_net()
        
    def invalid_fire_penalty(self, transition_name):
        return self.invalid_fire_penalty0 * (1-np.exp(-self.transitions[transition_name].missfire_num))
        